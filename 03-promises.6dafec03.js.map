{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA8BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,qBAAmBH,QAAiBC,KAE1CG,EAAK,mBAAiBJ,QAAeC,IAAQ,GAGhDA,EAAM,G,CAxCAO,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAEF,MAAMC,EAAWF,EAAEG,OAAOD,SACpBE,EAASF,EAASE,OAAOC,MACzBf,EAAQgB,OAAOJ,EAASZ,MAAMe,OAC9BE,EAAOD,OAAOJ,EAASK,KAAKF,OAClC,IAAIG,EAAmB,EACnBC,EAAkB,EAEtB,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAQM,GAAK,EAC/BD,GAAmB,EAEnBD,EAAmBlB,EAAQiB,EAAOG,EAElCtB,EAAcqB,EAAiBD,GAC5BG,MAAKC,IACJC,EAAA3B,GAAS4B,OAAOC,QAAQH,EAAe,IAExCI,OAAMC,IACLJ,EAAA3B,GAAS4B,OAAOI,QAAQD,EAAc,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  const elements = e.target.elements;\n  const amount = elements.amount.value;\n  const delay = Number(elements.delay.value);\n  const step = Number(elements.step.value);\n  let delayStepCounter = 0;\n  let promisePosition = 0;\n\n  for (let i = 0; i < amount; i += 1) {\n    promisePosition += 1;\n\n    delayStepCounter = delay + step * i;\n\n    createPromise(promisePosition, delayStepCounter)\n      .then(successMessage => {\n        Notiflix.Notify.success(successMessage);\n      })\n      .catch(rejectMessage => {\n        Notiflix.Notify.failure(rejectMessage);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve(`✅ Fulfill promise ${position} in ${delay}`);\n      } else {\n        reject(`❌Reject promise ${position} in ${delay}`);\n      }\n      //promiseCounter = 0;\n    }, delay);\n  });\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","e","preventDefault","elements","target","amount","value","Number","step","delayStepCounter","promisePosition","i","then","successMessage","$parcel$interopDefault","Notify","success","catch","rejectMessage","failure"],"version":3,"file":"03-promises.6dafec03.js.map"}